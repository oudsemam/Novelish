{"ast":null,"code":"import { __read, __spread } from \"tslib\";\nimport { logger } from '@sentry/utils';\n/**\n * Express integration\n *\n * Provides an request and error handler for Express framework as well as tracing capabilities\n */\n\nvar Express =\n/** @class */\nfunction () {\n  /**\n   * @inheritDoc\n   */\n  function Express(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    /**\n     * @inheritDoc\n     */\n\n\n    this.name = Express.id;\n    this._router = options.router || options.app;\n    this._methods = (Array.isArray(options.methods) ? options.methods : []).concat('use');\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  Express.prototype.setupOnce = function () {\n    if (!this._router) {\n      logger.error('ExpressIntegration is missing an Express instance');\n      return;\n    }\n\n    instrumentMiddlewares(this._router, this._methods);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Express.id = 'Express';\n  return Express;\n}();\n\nexport { Express };\n/**\n * Wraps original middleware function in a tracing call, which stores the info about the call as a span,\n * and finishes it once the middleware is done invoking.\n *\n * Express middlewares have 3 various forms, thus we have to take care of all of them:\n * // sync\n * app.use(function (req, res) { ... })\n * // async\n * app.use(function (req, res, next) { ... })\n * // error handler\n * app.use(function (err, req, res, next) { ... })\n *\n * They all internally delegate to the `router[method]` of the given application instance.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\n\nfunction wrap(fn, method) {\n  var arity = fn.length;\n\n  switch (arity) {\n    case 2:\n      {\n        return function (req, res) {\n          var transaction = res.__sentry_transaction;\n\n          if (transaction) {\n            var span_1 = transaction.startChild({\n              description: fn.name,\n              op: \"middleware.\" + method\n            });\n            res.once('finish', function () {\n              span_1.finish();\n            });\n          }\n\n          return fn.call(this, req, res);\n        };\n      }\n\n    case 3:\n      {\n        return function (req, res, next) {\n          var _a;\n\n          var transaction = res.__sentry_transaction;\n          var span = (_a = transaction) === null || _a === void 0 ? void 0 : _a.startChild({\n            description: fn.name,\n            op: \"middleware.\" + method\n          });\n          fn.call(this, req, res, function () {\n            var args = [];\n\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n\n            var _a;\n\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            next.call.apply(next, __spread([this], args));\n          });\n        };\n      }\n\n    case 4:\n      {\n        return function (err, req, res, next) {\n          var _a;\n\n          var transaction = res.__sentry_transaction;\n          var span = (_a = transaction) === null || _a === void 0 ? void 0 : _a.startChild({\n            description: fn.name,\n            op: \"middleware.\" + method\n          });\n          fn.call(this, err, req, res, function () {\n            var args = [];\n\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n\n            var _a;\n\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            next.call.apply(next, __spread([this], args));\n          });\n        };\n      }\n\n    default:\n      {\n        throw new Error(\"Express middleware takes 2-4 arguments. Got: \" + arity);\n      }\n  }\n}\n/**\n * Takes all the function arguments passed to the original `app` or `router` method, eg. `app.use` or `router.use`\n * and wraps every function, as well as array of functions with a call to our `wrap` method.\n * We have to take care of the arrays as well as iterate over all of the arguments,\n * as `app.use` can accept middlewares in few various forms.\n *\n * app.use([<path>], <fn>)\n * app.use([<path>], <fn>, ...<fn>)\n * app.use([<path>], ...<fn>[])\n */\n\n\nfunction wrapMiddlewareArgs(args, method) {\n  return args.map(function (arg) {\n    if (typeof arg === 'function') {\n      return wrap(arg, method);\n    }\n\n    if (Array.isArray(arg)) {\n      return arg.map(function (a) {\n        if (typeof a === 'function') {\n          return wrap(a, method);\n        }\n\n        return a;\n      });\n    }\n\n    return arg;\n  });\n}\n/**\n * Patches original router to utilize our tracing functionality\n */\n\n\nfunction patchMiddleware(router, method) {\n  var originalCallback = router[method];\n\n  router[method] = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return originalCallback.call.apply(originalCallback, __spread([this], wrapMiddlewareArgs(args, method)));\n  };\n\n  return router;\n}\n/**\n * Patches original router methods\n */\n\n\nfunction instrumentMiddlewares(router, methods) {\n  if (methods === void 0) {\n    methods = [];\n  }\n\n  methods.forEach(function (method) {\n    return patchMiddleware(router, method);\n  });\n} //# sourceMappingURL=express.js.map","map":{"version":3,"sources":["C:/Users/mechi/Developer/novelish/node_modules/@sentry/tracing/esm/integrations/express.js"],"names":["__read","__spread","logger","Express","options","name","id","_router","router","app","_methods","Array","isArray","methods","concat","prototype","setupOnce","error","instrumentMiddlewares","wrap","fn","method","arity","length","req","res","transaction","__sentry_transaction","span_1","startChild","description","op","once","finish","call","next","_a","span","args","_i","arguments","apply","err","Error","wrapMiddlewareArgs","map","arg","a","patchMiddleware","originalCallback","forEach"],"mappings":"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","sourcesContent":["import { __read, __spread } from \"tslib\";\nimport { logger } from '@sentry/utils';\n/**\n * Express integration\n *\n * Provides an request and error handler for Express framework as well as tracing capabilities\n */\nvar Express = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Express(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = Express.id;\n        this._router = options.router || options.app;\n        this._methods = (Array.isArray(options.methods) ? options.methods : []).concat('use');\n    }\n    /**\n     * @inheritDoc\n     */\n    Express.prototype.setupOnce = function () {\n        if (!this._router) {\n            logger.error('ExpressIntegration is missing an Express instance');\n            return;\n        }\n        instrumentMiddlewares(this._router, this._methods);\n    };\n    /**\n     * @inheritDoc\n     */\n    Express.id = 'Express';\n    return Express;\n}());\nexport { Express };\n/**\n * Wraps original middleware function in a tracing call, which stores the info about the call as a span,\n * and finishes it once the middleware is done invoking.\n *\n * Express middlewares have 3 various forms, thus we have to take care of all of them:\n * // sync\n * app.use(function (req, res) { ... })\n * // async\n * app.use(function (req, res, next) { ... })\n * // error handler\n * app.use(function (err, req, res, next) { ... })\n *\n * They all internally delegate to the `router[method]` of the given application instance.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nfunction wrap(fn, method) {\n    var arity = fn.length;\n    switch (arity) {\n        case 2: {\n            return function (req, res) {\n                var transaction = res.__sentry_transaction;\n                if (transaction) {\n                    var span_1 = transaction.startChild({\n                        description: fn.name,\n                        op: \"middleware.\" + method,\n                    });\n                    res.once('finish', function () {\n                        span_1.finish();\n                    });\n                }\n                return fn.call(this, req, res);\n            };\n        }\n        case 3: {\n            return function (req, res, next) {\n                var _a;\n                var transaction = res.__sentry_transaction;\n                var span = (_a = transaction) === null || _a === void 0 ? void 0 : _a.startChild({\n                    description: fn.name,\n                    op: \"middleware.\" + method,\n                });\n                fn.call(this, req, res, function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var _a;\n                    (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                    next.call.apply(next, __spread([this], args));\n                });\n            };\n        }\n        case 4: {\n            return function (err, req, res, next) {\n                var _a;\n                var transaction = res.__sentry_transaction;\n                var span = (_a = transaction) === null || _a === void 0 ? void 0 : _a.startChild({\n                    description: fn.name,\n                    op: \"middleware.\" + method,\n                });\n                fn.call(this, err, req, res, function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var _a;\n                    (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                    next.call.apply(next, __spread([this], args));\n                });\n            };\n        }\n        default: {\n            throw new Error(\"Express middleware takes 2-4 arguments. Got: \" + arity);\n        }\n    }\n}\n/**\n * Takes all the function arguments passed to the original `app` or `router` method, eg. `app.use` or `router.use`\n * and wraps every function, as well as array of functions with a call to our `wrap` method.\n * We have to take care of the arrays as well as iterate over all of the arguments,\n * as `app.use` can accept middlewares in few various forms.\n *\n * app.use([<path>], <fn>)\n * app.use([<path>], <fn>, ...<fn>)\n * app.use([<path>], ...<fn>[])\n */\nfunction wrapMiddlewareArgs(args, method) {\n    return args.map(function (arg) {\n        if (typeof arg === 'function') {\n            return wrap(arg, method);\n        }\n        if (Array.isArray(arg)) {\n            return arg.map(function (a) {\n                if (typeof a === 'function') {\n                    return wrap(a, method);\n                }\n                return a;\n            });\n        }\n        return arg;\n    });\n}\n/**\n * Patches original router to utilize our tracing functionality\n */\nfunction patchMiddleware(router, method) {\n    var originalCallback = router[method];\n    router[method] = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return originalCallback.call.apply(originalCallback, __spread([this], wrapMiddlewareArgs(args, method)));\n    };\n    return router;\n}\n/**\n * Patches original router methods\n */\nfunction instrumentMiddlewares(router, methods) {\n    if (methods === void 0) { methods = []; }\n    methods.forEach(function (method) { return patchMiddleware(router, method); });\n}\n//# sourceMappingURL=express.js.map"]},"metadata":{},"sourceType":"module"}